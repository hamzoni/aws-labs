
Parameters:
  StackName:
    Type: String

  TagKey:
    Type: String
  TagValue:
    Type: String

  DbSubnetIpBlocks: 
    Description: "CIDR Blocks for VPC and Subnets"
    Type: CommaDelimitedList
    Default: "10.0.0.0/16, 10.0.1.0/24, 10.0.2.0/24, 10.0.3.0/24, 10.0.4.0/24"

Resources:

  # Vpc
  Vpc:
    Type: AWS::EC2::VPC
    Properties: 
      CidrBlock: !Select [ 0, !Ref DbSubnetIpBlocks ]
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags: 
        - Key: !Ref TagKey
          Value: !Ref TagValue

  # Subnets
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 0, !GetAZs ""]
      CidrBlock: !Select [ 1, !Ref DbSubnetIpBlocks ]
      MapPublicIpOnLaunch: true
      VpcId: !Ref Vpc
  
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 1, !GetAZs ""]
      CidrBlock: !Select [ 2, !Ref DbSubnetIpBlocks ]
      MapPublicIpOnLaunch: true
      VpcId: !Ref Vpc

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 0, !GetAZs ""]
      CidrBlock: !Select [ 3, !Ref DbSubnetIpBlocks ]
      VpcId: !Ref Vpc

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties: 
      AvailabilityZone: !Select [ 1, !GetAZs ""]
      CidrBlock: !Select [ 4, !Ref DbSubnetIpBlocks ]
      VpcId: !Ref Vpc

  # Internet gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties: 
      Tags: 
        - Key: !Ref TagKey
          Value: !Ref TagValue

  # Route Tables
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: !Ref TagKey
          Value: !Ref TagValue
      VpcId: !Ref Vpc

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      Tags: 
        - Key: !Ref TagKey
          Value: !Ref TagValue
      VpcId: !Ref Vpc

  # Routes
  InternetGatewayPublicRouteTable:
    Type: AWS::EC2::Route
    Properties: 
      GatewayId: !Ref InternetGateway
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: '0.0.0.0/0'

  # Subnet-Route Table associations
  SubnetRouteTablePublic1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1

  SubnetRouteTablePublic2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet2

  SubnetRouteTablePrivate1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet1
      
  SubnetRouteTablePrivate2:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnet2

Outputs:

  PublicSubnet1:
    Description: Public subnet 1
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${StackName}-PublicSubnet1
  PublicSubnet2:
    Description: Public subnet 2
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${StackName}-PublicSubnet2

  PrivateSubnet1:
    Description: Private subnet 1
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${StackName}-PrivateSubnet1
  PrivateSubnet2:
    Description: Private subnet 2
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${StackName}-PrivateSubnet2